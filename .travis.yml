language: cpp
compiler: gcc
dist: trusty
sudo: required

notifications:
  email: false

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    - sourceline: 'ppa:beineri/opt-qt-5.10.1-trusty'
    - sourceline: 'deb http://repo.nxos.org nxos main'
      key_url: 'http://repo.nxos.org/public.key'
    packages:
    - dpkg
    - qt510base
    - qt510declarative
    - qt510tools
    - qt510x11extras
    - qt510svg
    - qt510quickcontrols2
    - qt510xmlpatterns
    - wget
    - git
    - cmake
    - librsvg2-bin
    - nomad-plasma-look-and-feel
    - luv-icon-theme
    - nomad-desktop-settings

install:
  - wget http://ftp.debian.org/debian/pool/main/p/patchelf/patchelf_0.8-2_amd64.deb
  - sudo dpkg -i patchelf_0.8-2_amd64.deb
  - wget https://github.com/nomad-desktop/precompiled-kf5-linux/releases/download/continuous/kf5-5.44.0-Release-ubuntu-trusty-amd64.tar.xz
  - sudo tar xpf kf5-5.44.0-Release-ubuntu-trusty-amd64.tar.xz -C /usr

script:
  - /opt/qt510/bin/qt510-env.sh
  - echo "/opt/qt510/lib/" | sudo tee /etc/ld.so.conf.d/qt5.10.conf
  - cmake -DCMAKE_BUILD_TYPE=release -DCMAKE_INSTALL_PREFIX=/usr
  - make -j$(nproc)
  - export PATH=$PATH:/opt/qt510/bin/
  - export QMLIMPORTSCANNER_BIN=/opt/qt510/bin/qmlimportscanner
  - export QML_MODULES_FIND_DIRS=/opt/qt510/lib/
  - build_scripts/appimage.create.sh

after_success:
  - find appdir -executable -type f -exec ldd {} \; | grep " => /usr" | cut -d " " -f 2-3 | sort | uniq
  - mkdir out
  - mv -v Software_Center*.AppImage* out/
  - curl --upload-file "{$(echo out/* | tr ' ' ',')}" https://transfer.sh/

branches:
  except:
    - # Do not build tags that we create when we upload to GitHub Releases
    - /^(?i:continuous)$/

before_deploy:
  - if [ -z "$TRAVIS_TAG" ]; then; export TRAVIS_TAG="continuous"; git tag -f $TRAVIS_TAG; fi

deploy:
  provider: releases
  api_key: "$GITHUB_TOKEN"
  file_glob: true
  file: out/*
  skip_cleanup: true
  prerelease: true
  on:
    repo: nomad-desktop/nx-software-center
    branch: master
    tags: true
