language: cpp
compiler: gcc
dist: trusty
sudo: required

addons:
  apt:
    sources:
    - sourceline: 'ppa:beineri/opt-qt-5.10.1-trusty'
    - sourceline: 'deb http://repo.nxos.org/testing nxos main'
      key_url: 'http://repo.nxos.org/public.key'
    packages:
    - qt510base
    - qt510declarative
    - qt510xmlpatterns
    - qt510quickcontrols
    - qt510quickcontrols2
    - qt510graphicaleffects
    - qt510x11extras
    - qt510svg
    - libphonon4qt5-4
    - wget
    - git
    - cmake
    - libappimage-dev

before_install:
  - wget http://ftp.debian.org/debian/pool/main/p/patchelf/patchelf_0.8-2_amd64.deb -O /tmp/patchelf_0.8-2_amd64.deb
  - wget https://github.com/nomad-desktop/precompiled-kf5-linux/releases/download/continuous/kf5-5.44.0-Release-ubuntu-trusty-amd64.tar.xz -O /tmp/kf5-5.44.0-Release-ubuntu-trusty-amd64.tar.xz

install:
  - sudo dpkg -i /tmp/patchelf_0.8-2_amd64.deb
  - sudo tar xpf /tmp/kf5-5.44.0-Release-ubuntu-trusty-amd64.tar.xz -C /usr/
  - sudo update-alternatives --install /usr/bin/qmake qmake /opt/qt510/bin/qmake 1
  - sudo update-alternatives --install /usr/bin/qmlimportscanner qmlimportscanner /opt/qt510/bin/qmlimportscanner 1


script:
  - sudo apt-get -y update
  - sudo apt-get -yq install dpkg
  - sudo apt-get -yq install nomad-plasma-look-and-feel luv-icon-theme nomad-desktop-settings
  - /opt/qt510/bin/qt510-env.sh
  - export QT_SELECT=qt5
  - cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_PREFIX_PATH="/opt/qt510/"
  - make -j$(nproc)
  - export PATH=$PATH:/opt/qt510/bin/
  - export QML_MODULES_FIND_DIRS="/opt/qt510/qml /usr/lib/x86_64-linux-gnu/qml"
  - sudo ldconfig -c /opt/qt510/lib/ /usr/lib/x86_64-linux-gnu/
  - build_scripts/appimage.create.sh

after_success:
  - find appdir -executable -type f -exec ldd {} \; | grep " => /usr" | cut -d " " -f 2-3 | sort | uniq
  - curl --upload-file "{$(echo dist/* | tr ' ' ',')}" https://transfer.sh/

branches:
  except:
    - # Do not build tags that we create when we upload to GitHub Releases
    - /^(?i:continuous)$/

before_deploy:
  - if [ -z "$TRAVIS_TAG" ]; then export TRAVIS_TAG="continuous"; git tag -f $TRAVIS_TAG; fi

deploy:
  provider: releases
  api_key: "$GITHUB_TOKEN"
  file_glob: true
  file: dist/*
  skip_cleanup: true
  prerelease: true
  overwrite: true
  on:
    repo: Nitrux/nx-software-center
    branch: master
    tags: true

notifications:
  email: false
  slack: nitrux:LgpKKPnWky7IWShmzXsyVDWu
