name: Nitrux Software Center AppImage

on:
  push:
    branches: [ master ]

jobs:
  build-appimage:
    runs-on: ubuntu-22.04

    container:
      image: ubuntu:jammy
      env:
        DEBIAN_FRONTEND: noninteractive

    env:
      BRANCH_MAUIMAN: v1.0.1
      BRANCH_MAUIKIT: v2.2.1
      BRANCH_MAUIKIT_FILEBROWSING: master

    steps:
      - name: Install basic packages
        run: apt-get update -q && apt-get -qy install sudo && apt-get -qy install curl wget gnupg python3-pip patchelf git squashfs-tools zsync

      - name: Add required repo list
        run: |
          sudo touch /etc/apt/sources.list.d/neon.list
          echo "deb http://archive.neon.kde.org/user jammy main" | sudo tee -a /etc/apt/sources.list.d/neon.list
          curl 'http://keyserver.ubuntu.com/pks/lookup?op=get&search=0xE6D4736255751E5D' | sudo apt-key add -
          
          # sudo touch /etc/apt/sources.list.d/nitrux-repo.list
          # echo "deb https://packagecloud.io/nitrux/repo/debian/ trixie main" | sudo tee -a /etc/apt/sources.list.d/nitrux-repo.list
          # curl -L https://packagecloud.io/nitrux/repo/gpgkey | sudo apt-key add -
          
          wget -qO /etc/apt/sources.list.d/nitrux-depot.list https://raw.githubusercontent.com/Nitrux/iso-tool/legacy/configs/files/sources/sources.list.nitrux
          wget -qO /etc/apt/sources.list.d/nitrux-testing.list https://raw.githubusercontent.com/Nitrux/iso-tool/legacy/configs/files/sources/sources.list.nitrux.testing
          curl -L https://packagecloud.io/nitrux/depot/gpgkey | apt-key add -;
          curl -L https://packagecloud.io/nitrux/unison/gpgkey | apt-key add -;
          curl -L https://packagecloud.io/nitrux/testing/gpgkey | apt-key add -;

          sudo apt-get update -q

          apt -qq -yy install --no-install-recommends \
            libappimageupdate zsync2

          rm -r \
            /etc/apt/sources.list.d/nitrux-depot.list
          
          rm -r \
            /etc/apt/sources.list.d/nitrux-testing.list

          apt -qq update
      
      - name: Install appimagetool
        run: |
          wget -qc https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage -O /opt/appimagetool
          cd /opt/ && \
          chmod +x appimagetool && \
          sed -i 's|AI\x02|\x00\x00\x00|' appimagetool && \
          ./appimagetool --appimage-extract && \
          mv /opt/squashfs-root /opt/appimagetool.AppDir && \
          ln -s /opt/appimagetool.AppDir/AppRun /usr/local/bin/appimagetool && \
          rm /opt/appimagetool

      # Update GCC #1
      # Use the libappimage package from Lunar because the version in Jammy is too old, and AppImageUpdate fails to compile due to "undefined references."
      # And also update GCC and CPP because the version of libappimage in Lunar is compiled against GCC 12.2 and CPP 12.
      - name: Install libappimage from Lunar
        run: |
          >> ubuntu-lunar.list printf "%s\n" \
              '################' \
              '# Ubuntu Lunar #' \
              '################' \
              '' \
              'deb [arch=amd64] http://archive.ubuntu.com/ubuntu lunar main restricted universe multiverse' \
              'deb [arch=amd64] http://archive.ubuntu.com/ubuntu lunar-security main restricted universe multiverse' \
              'deb [arch=amd64] http://archive.ubuntu.com/ubuntu lunar-updates main restricted universe multiverse' \
              ''

          mv ubuntu-lunar.list /etc/apt/sources.list.d/

          apt -qq update

          apt -qq -yy install --no-install-recommends --only-upgrade \
            gcc

          apt -qq -yy install --no-install-recommends \
            libappimage-dev

          rm -r \
            /etc/apt/sources.list.d/ubuntu-lunar.list

          apt -qq update
          
      - name: Install AppImage Builder
        run: |
          git clone https://github.com/AppImageCrafters/appimage-builder.git
          cd appimage-builder
          pip install .
          cd ..

          # Installation of appimage builder from pip is temporarily disabled since
          # the fix related to pydpkg is not yet release and this installing from master to avoid the issue
          # run: sudo pip3 install appimage-builder==1.1.0

      - uses: actions/checkout@v2
      - name: Build AppImage
        run: sudo -E appimage-builder --skip-tests --recipe nx-software-center-appimage.yml

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "continuous"
          files: |
            ./*.AppImage*